#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <3 2>;
            then-layer = <4>;
        };
    };

    combos {
        compatible = "zmk,combos";

        tg_qwerty {
            bindings = <&change_lang>;
            key-positions = <25 26 27>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <27 26>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <27 28>;
        };

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <26 28>;
        };

        undo {
            bindings = <&kp LG(Z)>;
            key-positions = <25 26>;
        };
    };

    macros {
        change_lang: change_lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 1 &kp GLOBE>;
            label = "CHANGE_LANG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            bindings = <
&mt LGUI RBKT    &kp Q  &kp W  &kp F               &kp P      &kp B        &kp J        &kp L       &kp U               &kp Y    &kp SEMI  &mt LEFT_GUI LEFT_BRACKET
&mt LCTRL GRAVE  &kp A  &kp R  &kp S               &kp T      &kp G        &kp K        &kp N       &kp E               &kp I    &kp O     &mt RCTRL SQT
&mt LALT MINUS   &kp Z  &kp X  &kp C               &kp D      &kp V        &kp M        &kp H       &kp COMMA           &kp DOT  &kp FSLH  &mt RALT BSLH
                               &mt LEFT_SHIFT TAB  &lt 2 ESC  &lt 3 SPACE  &lt 3 ENTER  &lt 2 BSPC  &mt LEFT_SHIFT DEL
            >;
        };

        qwerty {
            bindings = <
&trans  &kp Q  &kp W  &kp E   &kp R   &kp T   &kp Y   &kp U   &kp I      &kp O       &kp P     &trans
&trans  &kp A  &kp S  &kp D   &kp F   &kp G   &kp H   &kp J   &kp K      &kp L       &kp SEMI  &trans
&trans  &kp Z  &kp X  &kp C   &kp V   &kp B   &kp N   &kp M   &kp COMMA  &kp PERIOD  &kp FSLH  &trans
                      &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        lower {
            bindings = <
&trans  &trans  &kp HOME  &kp UP    &kp END    &trans  &kp C_VOL_UP  &kp N7        &kp N8        &kp N9        &kp C_NEXT        &kp C_BRIGHTNESS_INC
&trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &kp C_MUTE    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp C_PLAY_PAUSE  &mt RCTRL K_APP
&trans  &trans  &trans    &kp CAPS  &trans     &trans  &kp C_VOL_DN  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp C_PREVIOUS    &kp C_BRIGHTNESS_DEC
                          &trans    &trans     &trans  &trans        &trans        &kp N0
            >;
        };

        raise {
            bindings = <
&trans  &kp F3  &kp F6  &kp F9  &kp F12  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F2  &kp F5  &kp F8  &kp F11  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F1  &kp F4  &kp F7  &kp F10  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans   &trans  &trans  &trans  &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none         &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans        &none         &trans        &trans
            >;
        };
    };
};
